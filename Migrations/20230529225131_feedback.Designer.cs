// <auto-generated />
using System;
using CoffeCodeDevops.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoffeCodeDevops.Migrations
{
    [DbContext(typeof(DBDataContext))]
    [Migration("20230529225131_feedback")]
    partial class feedback
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoffeCodeDevops.Data.Models.FeedbackModel", b =>
                {
                    b.Property<Guid>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("NextWorkshop")
                        .HasColumnType("integer");

                    b.Property<int>("PresentationNote")
                        .HasColumnType("integer");

                    b.Property<int>("SpeakerNote")
                        .HasColumnType("integer");

                    b.HasKey("FeedbackId");

                    b.ToTable("feedbacks", (string)null);
                });

            modelBuilder.Entity("CoffeCodeDevops.Data.Models.TestTableModel", b =>
                {
                    b.Property<string>("tableId")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("table_id");

                    b.Property<string>("tableName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("table_name");

                    b.Property<string>("tableType")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("table_type");

                    b.HasKey("tableId");

                    b.ToTable("test_table_devops", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
